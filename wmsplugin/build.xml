<!--
** This is a template build file for a JOSM  plugin.
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in your default plugin directory) run
**
**    > ant  install
**
** To build against the core in ../../core, create a correct manifest and deploy to
** SVN, run
**    - set the property commit.message
**    - set the property josm.reference.release to lowest JOSM release number this
**      plugin build is compatible with
**    > ant  deploy
**
**
-->
<project name="wmsplugin" default="dist" basedir=".">
    <property name="josm"                   location="../../core/dist/josm-custom.jar"/>
    <property name="plugin.dist.dir"        value="../../dist"/>
    <property name="plugin.build.dir"       value="build"/>
    <property name="plugin.jar"             value="${plugin.dist.dir}/${ant.project.name}.jar"/>
    <property name="ant.build.javac.target" value="1.5"/>
	<property name="commit.message"         value="fixing JOSM issue #3186" />
	<property name="josm.reference.release" value="2450" />

    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
    </target>
    <target name="compile" depends="init">
        <echo message="creating ${plugin.jar}"/>
        <javac srcdir="src" classpath="${josm}" debug="true" destdir="${plugin.build.dir}">
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>
    <target name="dist" depends="compile,revision">
    	<echo message="building ${plugin.jar} with version ${version.entry.commit.revision} for JOSM version ${josm.reference.release} "/>
        <copy todir="${plugin.build.dir}/images">
            <fileset dir="images"/>
        </copy>
        <jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
            <manifest>
                <attribute name="Author" value="Tim Waters, Petr DlouhÃ½"/>
                <attribute name="Plugin-Class" value="wmsplugin.WMSPlugin"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Display georeferenced images as background in JOSM (WMS servers, Yahoo, ...)."/>
                <attribute name="Plugin-Link" value="http://wiki.openstreetmap.org/wiki/JOSM/Plugins/WMSPlugin"/>
                <attribute name="Plugin-Mainversion" value="${josm.reference.release}"/>
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
                <attribute name="de_Plugin-Link" value="http://wiki.openstreetmap.org/wiki/DE:JOSM/Plugins/WMSPlugin"/>
            </manifest>
        </jar>
    </target>
    <target name="revision">
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
    </target>
    <target name="clean">
        <delete dir="${plugin.build.dir}"/>
        <delete file="${plugin.jar}"/>
    </target>
    <target name="install" depends="dist">
        <property environment="env"/>
        <condition property="josm.plugins.dir" value="${env.APPDATA}/JOSM/plugins" else="${user.home}/.josm/plugins">
            <and>
                <os family="windows"/>
            </and>
        </condition>
        <copy file="${plugin.jar}" todir="${josm.plugins.dir}"/>
    </target>

	<target name="core-info">
	        <exec append="false" output="core.info.xml" executable="svn" failifexecutionfails="false">
	                    <env key="LANG" value="C"/>
	                    <arg value="info"/>
	                    <arg value="--xml"/>
	                    <arg value="../../core"/>
	        </exec>
	        <xmlproperty file="core.info.xml" prefix="coreversion" keepRoot="true" collapseAttributes="true"/>
			<echo>Building against core revision ${coreversion.info.entry.revision} ...</echo>
			<delete file="core.info.xml" />
		</target>


		<target name="commit-current">
			<echo>Commiting the plugin source ...</echo>
		    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
		                    <env key="LANG" value="C"/>
		                    <arg value="commit"/>
		                    <arg value="-m &quot;${commit.message}&quot;"/>
		                    <arg value="."/>
		    </exec>
		</target>


		<target name="update-current">
			<echo>Updating basedir ...</echo>
		    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
		                    <env key="LANG" value="C"/>
		                    <arg value="up"/>
		                    <arg value="."/>
		    </exec>
			<echo>Updating ${plugin.jar} ...</echo>
		    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
		                    <env key="LANG" value="C"/>
		                    <arg value="up"/>
		                    <arg value="${plugin.jar}"/>
		    </exec>
		</target>

		<target name="commit-dist">
				<echo>Commiting ${plugin.jar} ...</echo>
			    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			                    <env key="LANG" value="C"/>
			                    <arg value="commit"/>
	                			<arg value="-m &quot;${commit.message}&quot;"/>
			                    <arg value="${plugin.jar}"/>
			    </exec>
	   	</target>

		<target name="deploy" depends="core-info,commit-current,update-current,clean,dist,commit-dist">
		</target>
</project>
