<?xml version="1.0" encoding="utf-8"?>
<!--
** This is a template build file for a JOSM  plugin.
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in you default plugin directory) run
**
**    > ant  install
**
** The generated plugin jar is not automatically available in JOSMs plugin configuration
** dialog. You have to check it in first.
**
** Use the ant target 'publish' to check in the plugin and make it available to other
** JOSM users:
**    set the properties commit.message and plugin.main.version
** and run
**    > ant  publish
**
**
-->
<project name="Harbour" default="dist" basedir=".">
    <!-- enter the SVN commit message -->
    <property name="commit.message" value="harbour: TristateChekBox added"/>
    <!-- enter the *lowest* JOSM version this plugin is currently compatible with -->
    <property name="plugin.main.version" value="4394"/>
    <!-- Declaring  time-stamps-->
    <tstamp/>
    <!--
      ************************************************
      ** should not be necessary to change the following properties
     -->
    <property name="josm" location="../../../../core/dist/josm-custom.jar"/>
    <property name="smed" location="../../core/dist/SeaMapEditor.jar"/>
    <property name="plugin.build.dir" value="build"/>
    <property name="plugin.src.dir" value="src"/>
    <property name="smed.build.dir" value="../../../smed/build"/>
    <property name="delete_string" value="*${ant.project.name}.jar"/>
    <!-- this is the directory where the plugin jar is copied to -->
    <property name="plugin.dist.dir" value="../../dist"/>
    <property name="ant.build.javac.target" value="1.5"/>
    <property name="plugin.jar" value="${plugin.dist.dir}/00_${DSTAMP}_${TSTAMP}_${ant.project.name}.jar"/>
    <!--
    **********************************************************
    ** init - initializes the build
    **********************************************************
    -->
    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
        <mkdir dir="${plugin.dist.dir}"/>
    </target>
    <!--
    **********************************************************
    ** compile - complies the source tree
    **********************************************************
    -->
    <target name="compile" depends="init">
        <echo message="compiling sources for  ${plugin.jar} ... "/>
        <javac srcdir="src" classpath="${josm}:${smed}" debug="true" destdir="${plugin.build.dir}">
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>
    <!--
    **********************************************************
    ** dist - creates the plugin jar
    **********************************************************
    -->
    <target name="dist" depends="compile,revision">
        <echo message="creating ${ant.project.name}.jar ... "/>
        <copy todir="${plugin.build.dir}/images">
            <fileset dir="${plugin.src.dir}/images"/>
        </copy>
        <copy todir="${plugin.build.dir}/images">
            <fileset dir="images"/>
        </copy>
        <copy todir="${plugin.build.dir}/harbour/msg">
            <fileset dir="${plugin.src.dir}/harbour/msg"/>
        </copy>
        <copy todir="${plugin.build.dir}">
            <fileset dir=".">
                <include name="copyright.txt"/>
                <include name="LICENSE.txt"/>
            </fileset>
        </copy>
        <delete>
            <fileset dir="${plugin.dist.dir}">
                <include name="${delete_string}"/>
            </fileset>
        </delete>
        <jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
            <!--
        ************************************************
        ** configure these properties. Most of them will be copied to the plugins
        ** manifest file. Property values will also show up in the list available
        ** plugins: http://josm.openstreetmap.de/wiki/Plugins.
        **
        ************************************************
    -->
            <manifest>
                <attribute name="Author" value="Werner, Malcolm"/>
                <attribute name="Plugin-Class" value="toms.Toms"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Create and edit seamarks for OpenSeaMap"/>
                <attribute name="Plugin-Icon" value="images/Smp.png"/>
                <attribute name="Plugin-Link" value="http://openseamap.org/"/>
                <attribute name="Plugin-Mainversion" value="${plugin.main.version}"/>
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
            </manifest>
        </jar>
    </target>
    <!--
    **********************************************************
    ** revision - extracts the current revision number for the
    **    file build.number and stores it in the XML property
    **    version.*
    **********************************************************
    -->
    <target name="revision">
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
    </target>
    <!--
    **********************************************************
    ** clean - clean up the build environment
    **********************************************************
    -->
    <target name="clean">
        <delete dir="${plugin.build.dir}"/>
        <delete>
            <fileset dir="${plugin.dist.dir}">
                <include name="${delete_string}"/>
            </fileset>
        </delete>
    </target>
</project>
