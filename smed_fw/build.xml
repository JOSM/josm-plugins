<?xml version="1.0" encoding="utf-8"?>
<!--
** This is a template build file for a JOSM  plugin.
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in you default plugin directory) run
**
**    > ant  install
**
** The generated plugin jar is not automatically available in JOSMs plugin configuration
** dialog. You have to check it in first.
**
** Use the ant target 'publish' to check in the plugin and make it available to other
** JOSM users:
**    set the properties commit.message and plugin.main.version
** and run
**    > ant  publish
**
**
-->
<project name="smed_fw" basedir=".">
    <!-- enter the SVN commit message -->
    <property name="commit.message" value="smed with embeddes felix and DS"/>
    <!-- enter the *lowest* JOSM version this plugin is currently compatible with -->
    <property name="plugin.main.version" value="4394"/>
    <!--
      ************************************************
      ** should not be necessary to change the following properties
     -->
    <property name="josm" location="../../core/dist/josm-custom.jar"/>
    <property name="felix" location="core/dist/felix.jar"/>
    <property name="plugin.build.dir" value="build/"/>
    <property name="plugin.src.dir" value="src/"/>
    <property name="smed_fw.dist.dir" value="dist/"/>
    <!-- this is the directory where the plugin jar is copied to -->
    <property name="plugin.dist.dir" value="../../dist/"/>
    <property name="smed_fw_core.dist.dir" value="core/dist/"/>
    <property name="ant.build.javac.target" value="1.5"/>
    <property name="plugin.jar" value="${plugin.dist.dir}${ant.project.name}.jar"/>
    <!--
    **********************************************************
    ** init - initializes the build
    **********************************************************
    -->
    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
        <mkdir dir="${smed_fw_core.dist.dir}"/>
        <mkdir dir="${smed_fw.dist.dir}"/>
    </target>
    <!--
    **********************************************************
    ** compile - complies the source tree
    **********************************************************
    -->
    <target name="compile" depends="init">
        <echo message="compiling sources for  ${plugin.jar} ... "/>
        <javac srcdir="src" classpath="${josm}:${felix}" debug="true" destdir="${plugin.build.dir}">
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>
    <!--
    **********************************************************
    ** dist - creates the plugin jar
    **********************************************************
    -->
    <target name="dist" depends="compile, revision">
        <echo message="creating ${ant.project.name}.jar ... "/>
        <copy todir="${plugin.build.dir}/images">
            <fileset dir="images"/>
        </copy>
        <copy todir="${plugin.build.dir}/smed_fw/msg">
            <fileset dir="${plugin.src.dir}/smed_fw/msg"/>
        </copy>
        <copy todir="${plugin.build.dir}">
            <fileset dir="${smed_fw.dist.dir}"/>
        </copy>
        <copy todir="${plugin.build.dir}">
            <fileset dir=".">
                <include name="*.txt"/>
            </fileset>
        </copy>
        <copy file="${felix}" todir="${plugin.build.dir}"/>
        <jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
            <!--
        ************************************************
        ** configure these properties. Most of them will be copied to the plugins
        ** manifest file. Property values will also show up in the list available
        ** plugins: http://josm.openstreetmap.de/wiki/Plugins.
        **
        ************************************************
    -->
            <manifest>
                <attribute name="Author" value="Werner, Malcolm"/>
                <attribute name="Plugin-Class" value="smed_fw.SmedFW"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Create and edit seamaps for OpenSeaMap"/>
                <attribute name="Plugin-Icon" value="images/Smed.png"/>
                <attribute name="Plugin-Link" value="http://openseamap.org/"/>
                <attribute name="Plugin-Mainversion" value="${plugin.main.version}"/>
                <!--
                <attribute name="Plugin-Version" value="23456"/>
                -->
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
                <attribute name="Class-Path" value="bin/felix.jar"/>
            </manifest>
        </jar>
        <!-- install interface -->
        <copy file="${plugin.jar}" todir="${smed_fw_core.dist.dir}"/>
    </target>
    <!--
    **********************************************************
    ** revision - extracts the current revision number for the
    **    file build.number and stores it in the XML property
    **    version.*
    **********************************************************
    -->
    <target name="revision">
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
    </target>
    <!--
    **********************************************************
    ** clean - clean up the build environment
    **********************************************************
    -->
    <target name="clean">
        <delete dir="${plugin.build.dir}"/>
        <delete file="${plugin.jar}"/>
    </target>
    <!--
    **********************************************************
    ** install - install the plugin in your local JOSM installation
    **********************************************************
    -->
    <target name="install" depends="dist">
        <property environment="env"/>
        <condition property="josm.plugins.dir" value="${env.APPDATA}/JOSM/plugins" else="${user.home}/.josm/plugins">
            <and>
                <os family="windows"/>
            </and>
        </condition>
        <copy file="${plugin.jar}" todir="${josm.plugins.dir}"/>
    </target>
    <!--
        ** commits the source tree for this plugin
        -->
    <target name="commit-current">
        <echo>Commiting the plugin source with message '${commit.message}' ...</echo>
        <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="commit"/>
            <arg value="-m '${commit.message}'"/>
            <arg value="."/>
        </exec>
    </target>
    <!--
        ** updates (svn up) the source tree for this plugin
        -->
    <target name="update-current">
        <echo>Updating plugin source ...</echo>
        <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="up"/>
            <arg value="."/>
        </exec>
        <echo>Updating ${plugin.jar} ...</echo>
        <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="up"/>
            <arg value="../dist/${plugin.jar}"/>
        </exec>
    </target>
</project>
