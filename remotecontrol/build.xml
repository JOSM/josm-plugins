<?xml version="1.0" encoding="UTF-8"?>
<!--
** This is the build file for the remotecontrol plugin
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in your default plugin directory) run
**
**    > ant  install
**
** To build against the core in ../../core, create a correct manifest and deploy to
** SVN, 
**    set the properties commit.message and plugin.main.version
** and run
**    > ant  publish
**
**
-->
<project name="remotecontrol" default="dist" basedir=".">
	
	<!-- set before publising -->
	<property name="commit.message" value="Fixed JOSM issue #3340" />		
	<property name="plugin.main.version" value="2401" />
	
    <property name="josm"                   location="../../core/dist/josm-custom.jar"/>
    <property name="plugin.dist.dir"        value="../../dist"/>
    <property name="plugin.build.dir"       value="build"/>
    <property name="plugin.jar"             value="${plugin.dist.dir}/${ant.project.name}.jar"/>
    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
    </target>
    <target name="compile" depends="init">
        <echo message="creating ${plugin.jar}"/>
        <javac srcdir="src" classpath="${josm}" debug="true" destdir="${plugin.build.dir}"
		       target="1.5" source="1.5" encoding="UTF-8">
		<compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>
    <target name="dist" depends="compile,revision">
        <copy todir="${plugin.build.dir}/images">
            <fileset dir="images"/>
        </copy>
        <jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
            <manifest>
                <attribute name="Author" value="Frederik Ramm"/>
                <attribute name="Plugin-Class" value="org.openstreetmap.josm.plugins.remotecontrol.RemoteControlPlugin"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Let other applications send commands to JOSM."/>
                <attribute name="Plugin-Link" value="http://wiki.openstreetmap.org/index.php/JOSM/Plugins/RemoteControl"/>
                <attribute name="Plugin-Mainversion" value="${plugin.main.version}"/>
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
            </manifest>
        </jar>
    </target>
    <target name="revision">
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
    </target>
    <target name="clean">
        <delete dir="${plugin.build.dir}"/>
        <delete file="${plugin.jar}"/>
    </target>
    <target name="install" depends="dist">
        <property environment="env"/>
        <condition property="josm.plugins.dir" value="${env.APPDATA}/JOSM/plugins" else="${user.home}/.josm/plugins">
            <and>
                <os family="windows"/>
            </and>
        </condition>
        <copy file="${plugin.jar}" todir="${josm.plugins.dir}"/>
    </target>
	
	<!--
		 ************************** Publishing the plugin *********************************** 
		-->
			<!--
			  ** extracts the JOSM release for the JOSM version in ../core and saves it in the 
			  ** property ${coreversion.info.entry.revision}
			  **
			-->
			<target name="core-info">
		        <exec append="false" output="core.info.xml" executable="svn" failifexecutionfails="false">
		                    <env key="LANG" value="C"/>
		                    <arg value="info"/>
		                    <arg value="--xml"/>
		                    <arg value="../../core"/>
		        </exec>
		        <xmlproperty file="core.info.xml" prefix="coreversion" keepRoot="true" collapseAttributes="true"/>
				<echo>Building against core revision ${coreversion.info.entry.revision}.</echo>			
				<echo>Plugin-Mainversion is set to ${plugin.main.version}.</echo>
				<delete file="core.info.xml" />
			</target>

			<!--
			 ** commits the source tree for this plugin
			-->
			<target name="commit-current">
				<echo>Commiting the plugin source with message '${commit.message}' ...</echo>
			    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			                    <env key="LANG" value="C"/>
			                    <arg value="commit"/>
			                    <arg value="-m '${commit.message}'"/>
			                    <arg value="."/>
			    </exec>	    
			</target>

			<!--
			** updates (svn up) the source tree for this plugin
			-->
			<target name="update-current">
				<echo>Updating plugin source ...</echo>
			    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			                    <env key="LANG" value="C"/>
			                    <arg value="up"/>
			                    <arg value="."/>
			    </exec>	    
				<echo>Updating ${plugin.jar} ...</echo>
			    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			                    <env key="LANG" value="C"/>
			                    <arg value="up"/>
			                    <arg value="../dist/${plugin.jar}"/>
			    </exec>	    
			</target>
			
			<!--
			 ** commits the plugin.jar 
			 -->
			<target name="commit-dist">
					<echo>
	***** Properties of published ${plugin.jar} *****
	Commit message    : '${commit.message}'					
	Plugin-Mainversion: ${plugin.main.version}
	JOSM build version: ${coreversion.info.entry.revision}
	Plugin-Version    : ${version.entry.commit.revision}
	***** / Properties of published ${plugin.jar} *****					
						
	Now commiting ${plugin.jar} ...
	</echo>					
				    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
				                    <env key="LANG" value="C"/>
					    			<arg value="-m '${commit.message}'"/>
				    				<arg value="commit"/>	                			
	            			        <arg value="${plugin.jar}"/>
				    </exec>	    
		   	</target>
					
			<target name="publish" depends="core-info,commit-current,update-current,clean,dist,commit-dist">
			</target>
</project>
