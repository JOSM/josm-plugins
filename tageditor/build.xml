<?xml version="1.0" encoding="UTF-8"?>
<!--
** This is a template build file for a JOSM  plugin.
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in your default plugin directory) run
**
**    > ant  install
**
** To build against the core in ../../core, create a correct manifest and deploy to
** SVN, 
**    set the properties commit.message and plugin.main.version
** and run
**    > ant  publish
**
**
-->
<project name="tageditor" default="dist" basedir=".">
    

	<property name="commit.message" value="Updated build.xml" />		
	<property name="plugin.main.version" value="2355" />

	<!--
      ************************************************
      ** should not be necessary to change the following properties
     -->
    <property name="josm"                   location="../../core/dist/josm-custom.jar"/>
    <property name="plugin.build.dir"       value="build"/>
    <property name="plugin.src.dir"         value="src"/>
    <!-- this is the directory where the plugin jar is copied to -->
    <property name="plugin.dist.dir"        value="../../dist"/>
    <property name="ant.build.javac.target" value="1.5"/>
    <property name="plugin.dist.dir"        value="../../dist"/>
    <property name="plugin.jar"             value="${plugin.dist.dir}/${ant.project.name}.jar"/>
    
    <!--
    **********************************************************
    ** init - initializes the build
    **********************************************************
    -->
    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
    </target>

    <!--
    **********************************************************
    ** compile - complies the source tree
    **********************************************************
    -->
    <target name="compile" depends="init">
        <echo message="compiling sources for  ${plugin.jar} ... "/>
        <javac srcdir="src" classpath="${josm}" debug="true" destdir="${plugin.build.dir}">
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>

    <!--
    **********************************************************
    ** dist - creates the plugin jar
    **********************************************************
    -->
    <target name="dist" depends="compile,revision">
        <echo message="creating ${plugin.jar} for version ${version.entry.commit.revision} ... "/>
        <copy todir="${plugin.build.dir}/resources">
            <fileset dir="resources"/>
        </copy>
        <copy todir="${plugin.build.dir}">
            <fileset dir=".">
                <include name="README" />
                <include name="LICENSE" />
            </fileset>
        </copy>
        <copy todir="${plugin.build.dir}">
            <fileset dir="${plugin.src.dir}">
                <include name="**/*.dtd"/>
            </fileset>
        </copy>
        <jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
            <manifest>
                <attribute name="Author" value="Karl Guggisberg"/>
                <attribute name="Plugin-Class" value="org.openstreetmap.josm.plugins.tageditor.TagEditorPlugin"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Provides a dialog for editing tags in a tabular grid."/>
                <attribute name="Plugin-Link" value="http://wiki.openstreetmap.org/index.php/JOSM/Plugins/TagEditor"/>
                <attribute name="Plugin-Mainversion" value="${plugin.main.version}"/>
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
            </manifest>
        </jar>
    </target>

    <!--
    **********************************************************
    ** revision - extracts the current revision number for the
    **    file build.number and stores it in the XML property
    **    version.*
    **********************************************************
    -->
    <target name="revision">
        <!-- extract the SVN revision information  -->
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
                    <env key="LANG" value="C"/>
                    <arg value="info"/>
                    <arg value="--xml"/>
                    <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
    </target>
	
    <!--
    **********************************************************
    ** clean - clean up the build environment
    **********************************************************
    -->
    <target name="clean">
        <delete dir="${plugin.build.dir}"/>
        <delete file="${plugin.jar}"/>
    </target>

    <!--
    **********************************************************
    ** install - install the plugin in your local JOSM installation
    **********************************************************
    -->
    <target name="install" depends="dist">
        <property environment="env"/>
        <condition property="josm.plugins.dir" value="${env.APPDATA}/JOSM/plugins" else="${user.home}/.josm/plugins">
            <and>
                <os family="windows"/>
            </and>
        </condition>
        <copy file="${plugin.jar}" todir="${josm.plugins.dir}"/>
    </target>

	<target name="core-info">
        <exec append="false" output="core.info.xml" executable="svn" failifexecutionfails="false">
                    <env key="LANG" value="C"/>
                    <arg value="info"/>
                    <arg value="--xml"/>
                    <arg value="../../core"/>
        </exec>
        <xmlproperty file="core.info.xml" prefix="coreversion" keepRoot="true" collapseAttributes="true"/>
		<echo>Building against core revision ${coreversion.info.entry.revision}.</echo>
		
		<echo>Plugin-Mainversion is set to ${plugin.main.version}.</echo>
		<delete file="core.info.xml" />
	</target>

	
	<target name="commit-current">
		<echo>Commiting the plugin source with message '${commit.message}' ...</echo>
	    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
	                    <env key="LANG" value="C"/>
	                    <arg value="commit"/>
	                    <arg value="-m &quot;${commit.message}&quot;"/>
	                    <arg value="."/>
	    </exec>	    
	</target>

	
	<target name="update-current">
		<echo>Updating plugin source ...</echo>
	    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
	                    <env key="LANG" value="C"/>
	                    <arg value="up"/>
	                    <arg value="."/>
	    </exec>	    
		<echo>Updating ${plugin.jar} ...</echo>
	    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
	                    <env key="LANG" value="C"/>
	                    <arg value="up"/>
	                    <arg value="../dist/${plugin.jar}"/>
	    </exec>	    
	</target>
	
	<target name="commit-dist">
			<echo>Commiting ${plugin.jar} with message '${commit.message}' ...</echo>
			<echo>Plugin-Mainversion is '${plugin.main.version}' ...</echo>
			<echo>Plugin-Version is ${version.entry.commit.revision} ...</echo>
			<if>
				<equals arg1="${plugin.main.version}" arg2="${coreversion.info.entry.revision}" />
				<then></then>
				<else>				
			<echo level="warning" if="${difference-in-josm-version}">!!!WARNING!!! Plugin-Mainversion is not equal to the JOSM version used in this build. !!!WARNING!!!</echo>
				</else>
			</if>
		    <exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
		                    <env key="LANG" value="C"/>
		                    <arg value="commit"/>
                			<arg value="-m &quot;${commit.message}&quot;"/>
		                    <arg value="../dist/${plugin.jar}"/>
		    </exec>	    
   	</target>
	
	<target name="publish" depends="core-info,commit-current,update-current,clean,dist,commit-dist">
	</target>
</project>
