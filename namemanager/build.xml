<?xml version="1.0" encoding="UTF-8"?>
<project name="namemanager" default="dist" basedir=".">
	<property name="plugin.main.version" value="3966" />
	<property name="josm" location="../JOSM/dist/josm-custom.jar" />
	<property name="plugin.dist.dir" value="../JOSM/dist" />
	<property name="plugin.build.dir" value="build" />
	<property name="plugin.jar" value="${plugin.dist.dir}/${ant.project.name}.jar" />
	<property name="ant.build.javac.target" value="1.5" />
	<target name="init">
		<mkdir dir="${plugin.build.dir}" />
	</target>
	<target name="compile" depends="init">
		<echo message="compiling sources for  ${plugin.jar} ... " />
		<javac srcdir="src" classpath="${josm}" debug="true" destdir="${plugin.build.dir}">
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	<target name="dist" depends="compile,revision">
		<echo message="creating ${plugin.jar.name} ... " />
		<copy todir="${plugin.build.dir}/resources">
			<fileset dir="resources" />
		</copy>
		<copy todir="${plugin.build.dir}/images">
			<fileset dir="images" />
		</copy>
		<copy todir="${plugin.build.dir}">
			<fileset dir=".">
				<include name="README" />
				<include name="LICENSE" />
			</fileset>
		</copy>
		<jar destfile="${plugin.jar}" basedir="${plugin.build.dir}">
			<manifest>
				<attribute name="Author" value="Rafal Jachowicz: rjachow@gmail.com" />
				<attribute name="Main-Class" value="org.openstreetmap.josm.plugins.namemanager.NameManagerMain" />
				<attribute name="Plugin-Class" value="org.openstreetmap.josm.plugins.namemanager.NameManagerPlugin" />
				<attribute name="Plugin-Date" value="${version.entry.commit.date}" />
				<attribute name="Plugin-Description" value="Allows to attribute tags to all objects in any selected area at once" />
				<attribute name="pl_Plugin-Description" value="Pozwala na dodawanie, edycję i usuwanie tagów znajdujących się we wskazanym obszarze na raz" />
				<attribute name="Plugin-Mainversion" value="3966" />
				<attribute name="Plugin-Version" value="${version.entry.commit.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="revision">

		<exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="info" />
			<arg value="--xml" />
			<arg value="." />
		</exec>
		<xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true" />
		<delete file="REVISION" />
	</target>
	<target name="clean">
		<delete dir="${plugin.build.dir}" />
		<delete file="${plugin.jar}" />
	</target>
	<target name="install" depends="dist">
		<property environment="env" />
		<condition property="josm.plugins.dir" value="${env.APPDATA}/JOSM/plugins" else="${user.home}/.josm/plugins">
			<and>
				<os family="windows" />
			</and>
		</condition>
		<copy file="${plugin.jar}" todir="${josm.plugins.dir}" />
	</target>
	<target name="core-info">
		<exec append="false" output="core.info.xml" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="info" />
			<arg value="--xml" />
			<arg value="../../core" />
		</exec>
		<xmlproperty file="core.info.xml" prefix="coreversion" keepRoot="true" collapseAttributes="true" />
		<echo>Building against core revision ${coreversion.info.entry.revision}.</echo>
		<echo>Plugin-Mainversion is set to ${plugin.main.version}.</echo>
		<delete file="core.info.xml" />
	</target>
	<target name="commit-current">
		<echo>Commiting the plugin source with message '${commit.message}' ...</echo>
		<exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="commit" />
			<arg value="-m '${commit.message}'" />
			<arg value="." />
		</exec>
	</target>
	<target name="update-current">
		<echo>Updating plugin source ...</echo>
		<exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="up" />
			<arg value="." />
		</exec>
		<echo>Updating ${plugin.jar} ...</echo>
		<exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="up" />
			<arg value="../dist/${plugin.jar}" />
		</exec>
	</target>
	<target name="commit-dist">
		<echo>
	***** Properties of published ${plugin.jar} *****
	Commit message    : '${commit.message}'					
	Plugin-Mainversion: ${plugin.main.version}
	JOSM build version: ${coreversion.info.entry.revision}
	Plugin-Version    : ${version.entry.commit.revision}
	***** / Properties of published ${plugin.jar} *****					
						
	Now commiting ${plugin.jar} ...
	</echo>
		<exec append="true" output="svn.log" executable="svn" failifexecutionfails="false">
			<env key="LANG" value="C" />
			<arg value="-m '${commit.message}'" />
			<arg value="commit" />
			<arg value="${plugin.jar}" />
		</exec>
	</target>
	<target name="ensure-svn-present">
		<exec append="true" output="svn.log" executable="svn" failifexecutionfails="false" failonerror="false" resultproperty="svn.exit.code">
			<env key="LANG" value="C" />
			<arg value="--version" />
		</exec>
		<fail message="Fatal: command 'svn --version' failed. Please make sure svn is installed on your system.">
			<condition>
				<not>
					<isset property="svn.exit.code" />
				</not>
			</condition>
		</fail>
		<fail message="Fatal: command 'svn --version' failed. Please make sure a working copy of svn is installed on your system.">
			<condition>
				<isfailure code="${svn.exit.code}" />
			</condition>
		</fail>
	</target>

	<target name="publish" depends="ensure-svn-present,core-info,commit-current,update-current,clean,dist,commit-dist">
	</target>
</project>
