# JOSM TagChecker validator file

# Dormat:
# Each line specifies a certain error to be reported
# <data type> : messagetype : <key><expression><value>
#
# Data type can be:
#  node        - a node point
#  way         - a way
#  relation    - a relation
#  *           - all data types
#
# Message type can be:
# E            - an error
# W            - a warning
# I            - an low priority informational warning
#
# Key and value are expressions describing certain keys and values of these keys.
# Regulator expressions are supported. In this case the expressions starts and
# ends with // signs. If an 'i' is appended, the regular expression is
# case insensitive.
#
# The * sign indicates any string.
# The texts BOOLEAN_TRUE and BOOLEAN_FALSE in the value part indicate a special
# handling for boolean values (yes, true, 0, false, no, ...).
#
# Expression can be:
#  !=          - the key/value combination does not match
#  ==          - the key/value combination does match
#
# To have more complicated expressions, multiple elements can be grouped together
# with an logical and (&&).
#
# The comment at the end of a rule is displayed in validator description
#
# Empty lines and space signs are ignored

node : W : oneway == *                                         # oneway tag on a node
node : W : bridge == BOOLEAN_TRUE                              # bridge tag on a node
node : W : highway == tertiary                                 # wrong highway tag on a node
node : W : highway == secondary                                # wrong highway tag on a node
node : W : highway == residential                              # wrong highway tag on a node
node : W : highway == unclassified                             # wrong highway tag on a node
node : W : highway == track                                    # wrong highway tag on a node
way  : I : highway == secondary && ref != *                    # highway without a reference
way  : I : highway == tertiary && ref != *                     # highway without a reference
*    : W : / *name */i == * && name != *                       # misspelled key name

way  : W : highway == cycleway && bicycle == BOOLEAN_FALSE     # cycleway with tag bicycle
way  : W : highway == footway && foot == BOOLEAN_FALSE         # footway with tag foot
#way  : I : highway == cycleway && bicycle == *                 # cycleway with tag bicycle
#way  : I : highway == footway && foot == *                     # footway with tag foot
way  : W : highway == cycleway && cycleway == lane             # seperate cycleway as lane on a cycleway
way  : W : highway == * && barrier == *                        # barrier used on a way

#way  : I : waterway == * && layer != *                         # waterway without layer tag
way  : I : highway == footway && maxspeed == *                 # maxspeed used for footway

*    : W : layer == /\+.*/                                     # layer tag with + sign

#*    : I : name == /.*Strasse.*/i                             # street name wrong
*    : W : name == /.*Str\.?/i                                 # abbreviated street name
