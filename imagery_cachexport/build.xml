<?xml version="1.0" encoding="utf-8"?>
<project name="imagery_cachexport" default="dist" basedir=".">

    <!-- enter the SVN commit message -->
    <property name="commit.message" value="Commit message"/>
    <!-- enter the *lowest* JOSM version this plugin is currently compatible with -->
    <property name="plugin.main.version" value="14140"/>

    <!-- Configure these properties (replace "..." accordingly).
         See https://josm.openstreetmap.de/wiki/DevelopersGuide/DevelopingPlugins
    -->
    <property name="plugin.author" value="holgermappt"/>
    <property name="plugin.class" value="org.openstreetmap.josm.plugins.imagery_cachexport.ImageryCacheExportPlugin"/>
    <property name="plugin.description" value="Export tiles from the imagery layer cache into the file system."/>
    <property name="plugin.icon" value="images/imageryexport.png"/>
    <!--property name="plugin.link" value="https://wiki.openstreetmap.org/wiki/JOSM/Plugins/ImageryCacheExport"/>-->
    <!--<property name="plugin.early" value="..."/>-->
    <!--<property name="plugin.requires" value="..."/>-->
    <!--<property name="plugin.stage" value="..."/>-->
    <property name="plugin.canloadatruntime" value="true"/>
    
    <property name="josm" location="../../core/dist/josm-custom.jar"/>
    <property name="plugin.javadoc.dir" location="javadoc"/>

    <!-- ** include targets that all plugins have in common ** -->
    <import file="../build-common.xml"/>

    <!-- ** internationalization ** -->
    <import file="i18n/build-i18n.xml"/>

    <target name="pot" description="Extract translatable strings from source." depends="gettext-init">
        <mkdir dir="${plugin.po.dir}"/>
        <gettext-extract keysFile="${ant.project.name}.pot" poDirectory="${plugin.po.dir}" keywords="-k -ktrc:1c,2 -kmarktrc:1c,2 -ktr -kmarktr -ktrn:1,2 -ktrnc:1c,2,3">
            <fileset dir="${plugin.src.dir}" includes="**/*.java"/>
        </gettext-extract>
        <echo file="${plugin.po.dir}/${ant.project.name}.pot" append="true">
#. Plugin ${ant.project.name}
#: build.xml:1
msgid "${plugin.description}"
msgstr ""
</echo>
    </target>

    <target name="additional-manifest">
        <antcall target="mftrans"/>
    </target>
</project>
